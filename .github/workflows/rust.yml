name: Rust

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
  workflow_dispatch:  # Makes the workflow manually triggable

env:
  CARGO_TERM_COLOR: always

jobs:
  build:
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest]  # Matrix to build for both Ubuntu and Windows

    runs-on: ${{ matrix.os }}

    steps:
    - uses: actions/checkout@v4

    # Restore the build cache to speed up the build process
    - name: Cache Cargo registry and build
      uses: actions/cache@v3
      with:
        path: |
          ~/.cargo/registry
          ~/.cargo/git
          target
        key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
        restore-keys: |
          ${{ runner.os }}-cargo-

    - name: Build
      run: cargo build --release --verbose --target ${{ matrix.os == 'ubuntu-latest' && 'x86_64-unknown-linux-gnu' || 'x86_64-pc-windows-msvc' }}

    - name: Run tests
      run: cargo test --verbose --target ${{ matrix.os == 'ubuntu-latest' && 'x86_64-unknown-linux-gnu' || 'x86_64-pc-windows-msvc' }}

  upload-artifact:
    runs-on: ubuntu-latest  # Use Ubuntu to upload the artifacts (could also be Windows if preferred)
    needs: build  # Ensures this job runs after the build job
    steps:
    - uses: actions/checkout@v4

    # Upload Linux Artifacts
    - name: Upload Linux Artifacts
      if: matrix.os == 'ubuntu-latest'
      run: |
        mkdir -p build/linux
        cp -r target/x86_64-unknown-linux-gnu/release/* build/linux/

    # Upload Windows Artifacts
    - name: Upload Windows Artifacts
      if: matrix.os == 'windows-latest'
      run: |
        mkdir -p build/windows
        cp -r target/x86_64-pc-windows-msvc/release/* build/windows/

    # Upload the artifacts
    - name: Upload Artifact
      uses: actions/upload-artifact@v3
      with:
        name: rust-build-artifacts
        path: build/
